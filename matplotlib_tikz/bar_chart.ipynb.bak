{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Viz with matplotlib Series 1: Bar chart\n",
    "\n",
    "## Reference\n",
    "\n",
    "- Bar chart\n",
    "    <https://en.wikipedia.org/wiki/Bar_chart>\n",
    "- What to consider when creating stacked column charts\n",
    "    <https://blog.datawrapper.de/stacked-column-charts>\n",
    "- Horizontal bar chart\n",
    "    <https://datavizproject.com/data-type/bar-chart-horizontal/>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Bar chart\n",
    "A bar chart or bar graph is a chart or graph that presents categorical data with rectangular bars with heights or lengths proportional to the values that they represent. The bars can be plotted vertically or horizontally. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### When to use it ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Compare **categorical data**.\n",
    "- Comparisons among **discrete categories**.\n",
    "- One axis of the chart shows the specific categories being compared, and the other axis represents a measured value."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10c4fbf28>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 6))\n",
    "\n",
    "x = np.arange(4)\n",
    "turnover_k_euros = [12, 34, 31, 20]\n",
    "\n",
    "plt.bar(x, turnover_k_euros, width=0.4)\n",
    "plt.xticks(np.arange(4), ('apple', 'banana', 'cherry', 'durian'))\n",
    "plt.xlabel('Product')\n",
    "plt.ylabel('Turnover (k euros)')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plot describes turnovers(k euros) for each fruit. Among four fruits, bananas' sales bring the largest turnover (34k euros), however, it seems that consumers don't like apple that much."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Grouped bar chart\n",
    "Bar graphs can also be used for more complex comparisons of data with grouped bar charts and stacked bar charts. In a grouped bar chart, for each categorical group there are two or more bars. These bars are color-coded to represent a particular grouping."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### When to use it ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To represent and compare **different categories of two or more groups**."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10c5acef0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "year_n_1 = (20, 25, 27, 35, 27, 27, 33)\n",
    "year_n = (25, 32, 35, 40, 33, 29, 36)\n",
    "\n",
    "ind = np.arange(7)\n",
    "width = 0.35\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(9, 6))\n",
    "rects1 = ax.bar(ind - width / 2, year_n_1, width, color='#1f77b4', alpha=0.5)\n",
    "rects2 = ax.bar(ind + width / 2, year_n, width, color='#1f77b4')\n",
    "\n",
    "plt.xticks(np.arange(7), ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'))\n",
    "plt.xlabel('Month')\n",
    "plt.ylabel('Turnover (k euros)')\n",
    "plt.legend((rects1[0], rects2[0]), ('year N-1', 'year N'))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plot compares monthly turnover of year N to year N-1. Except for April and May, monthly turnover in year N is higher than year N-1. In the case of retailing, this kind of changes can be explained like the strategy of year N works well, or new products attract clients, or new stores of year N contribute to the turnover."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Stacked bar chart\n",
    "Alternatively, a stacked bar chart could be used. The stacked bar chart stacks bars that represent different groups on top of each other. The height of the resulting bar shows the combined result of the groups."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### When to use it ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- To compare the **totals** and **one part of the totals**.\n",
    "- If the total of your parts is crucial, stacked column chart can work well for dates."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10c6a5630>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 6))\n",
    "\n",
    "cheese = (20, 25, 22, 25, 27, 30, 10)\n",
    "non_cheese = (10, 18, 15, 16, 18, 17, 9)\n",
    "\n",
    "rect1 = plt.bar(np.arange(7), cheese, width=0.5, color='orangered', alpha=0.9)\n",
    "rect2 = plt.bar(np.arange(7), non_cheese, bottom=cheese, width=0.5, color='#1f77b4', alpha=0.9)\n",
    "\n",
    "plt.xticks(np.arange(7), ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'))\n",
    "plt.xlabel('Weekday')\n",
    "plt.ylabel('Turnover (k euros)')\n",
    "plt.legend((rect1[0], rect2[0]), ('cheese', 'non-cheese'))\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plot presents weekdays' turnover with cheese and non-cheese products' sales. Globally, the sales of cheese products are much more than others."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Horizontal bar chart"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The horizontal bar chart is the same as a vertical bar chart only the x-axis and y-axis are switched."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### When to use it ?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- You need more room to fit text labels for categorical variables.\n",
    "- When you work with a big dataset, horizontal bar charts tend to work better in a narrow layout such as mobile view."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>product</th>\n",
       "      <th>turnover</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>soup</td>\n",
       "      <td>293</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>pizza</td>\n",
       "      <td>428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>sushi</td>\n",
       "      <td>493</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>chicken</td>\n",
       "      <td>572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>salade</td>\n",
       "      <td>593</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>red wine</td>\n",
       "      <td>639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>cheese</td>\n",
       "      <td>739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>grill</td>\n",
       "      <td>846</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    product  turnover\n",
       "0      soup       293\n",
       "1     pizza       428\n",
       "2     sushi       493\n",
       "3   chicken       572\n",
       "4    salade       593\n",
       "5  red wine       639\n",
       "6    cheese       739\n",
       "7     grill       846"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame({'product': ['grill', 'cheese', 'red wine', 'salade', 'chicken', 'sushi', 'pizza', 'soup'],\n",
    "                   'turnover': [846, 739, 639, 593, 572, 493, 428, 293]},\n",
    "                  columns=['product', 'turnover'])\n",
    "df.sort_values('turnover', inplace=True)\n",
    "df.reset_index(inplace=True, drop=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10c6a67b8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(9, 6))\n",
    "\n",
    "plt.barh(np.arange(len(df['product'])), df['turnover'], align='center')\n",
    "plt.yticks(np.arange(len(df['product'])), df['product'])\n",
    "plt.tick_params(labelsize=12)\n",
    "plt.xlabel('Turnover(k euros)', fontdict={'fontsize': 13})\n",
    "plt.ylabel('Product', fontdict={'fontsize': 13})\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This vertical bar chart describes clearly turnover for each product. Obviously, grill product is prefered by clients."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
